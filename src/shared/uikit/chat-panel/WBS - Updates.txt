WBS: Улучшение интерфейса чата с ИИ
Этот документ описывает последовательность задач для доработки фронтенд-части проекта. Основные принципы: инкапсуляция нового функционала, минимальные изменения в существующей структуре и обязательная проверка зависимостей для сохранения стабильности системы. Все стилистические и архитектурные решения должны соответствовать текущему дизайну, разработанному на основе Figma.

✅ Задача 1: Реализация сохранения истории чата между сессиями - ВЫПОЛНЕНО

Use Case: Сохранение контекста беседы

Use Case ID	UC-01
Название	Сохранение истории чата при смене документов
Действующее лицо	Пользователь
Описание	Пользователь ведет диалог с ИИ в контексте документа X. Затем он переходит к документу Y, а через некоторое время возвращается к документу X. Пользователь ожидает увидеть полную историю своего предыдущего диалога с ИИ, чтобы продолжить беседу с того места, где остановился.
Основной сценарий	1. Пользователь открывает документ X и начинает чат с ИИ.
2. Пользователь отправляет несколько сообщений и получает на них ответы.
3. Пользователь переходит в другой раздел системы, открывая документ Y.
4. Пользователь возвращается к документу X.
5. Система автоматически загружает и отображает всю предыдущую историю переписки в окне чата, связанную с документом X.
Условие завершения	Пользователь видит историю чата и может продолжить диалог.

РЕАЛИЗАЦИЯ:
✅ Создан модуль chatHistory.ts с функциями для работы с localStorage
✅ Реализована генерация уникальных ID документов на основе workspaceId + URL
✅ Добавлено автоматическое сохранение/загрузка истории при переключении документов
✅ Добавлена кнопка очистки истории в интерфейс ChatPanel
✅ Реализована миграция старого формата данных для обратной совместимости

Критерии приемки (Acceptance Criteria)

✅ При переходе от документа X к документу Y и обратно, история чата в документе X полностью восстанавливается.

✅ История чата для документа X не отображается в чате для документа Y (и наоборот).

✅ Если закрыть и снова открыть вкладку браузера, история чата для каждого документа сохраняется и доступна при возвращении.

✅ Производительность не страдает при загрузке длинной истории переписки.

✅ Задача 2: Разделение интерфейсов табов Chat и Review - ВЫПОЛНЕНО

Use Case: Корректное отображение вкладок

Use Case ID	UC-02
Название	Изоляция содержимого вкладок "Chat" и "Review"
Действующее лицо	Пользователь
Описание	Пользователь взаимодействует с панелью, где есть две вкладки: "Chat" и "Review". Пользователь ожидает, что при переключении между этими вкладками их содержимое будет независимым. Вкладка "Chat" должна содержать только диалог с ИИ, а вкладка "Review" — только инструменты для рецензирования документа.

РЕАЛИЗАЦИЯ:
✅ Обновлена структура ChatPanelState с отдельными chatMessages и reviewMessages
✅ Модифицированы утилиты chatHistory для работы с разделенными сообщениями
✅ Полностью обновлен ChatTab.tsx для использования chatMessages
✅ Полностью обновлен ReviewTab.tsx для использования reviewMessages
✅ Реализовано разделение состояния между табами

Критерии приемки (Acceptance Criteria)

✅ При активной вкладке "Review" интерфейс чата (поле ввода, сообщения) полностью отсутствует.

✅ При переключении с "Chat" на "Review" и обратно, история и текущее состояние чата (например, набранный, но не отправленный текст) не теряются.

✅ Вкладка "Review" стабильно отображает свой собственный, предназначенный для нее интерфейс (базовые опции для ревью).

✅ Задача 3: Улучшение интерфейса результатов в табе Review - ВЫПОЛНЕНО

Use Case: Управление результатами ревью

Use Case ID	UC-03
Название	Взаимодействие с результатом ревью
Действующее лицо	Пользователь
Описание	После выполнения анализа документа во вкладке "Review" система выводит результат в виде текста. Пользователю нужны простые инструменты для работы с этим результатом: скопировать его для дальнейшего использования или скрыть, чтобы вернуться к исходному виду вкладки.

РЕАЛИЗАЦИЯ:
✅ Создан специализированный компонент ReviewMessageComponent
✅ Добавлены кнопки "Copy" и "Dismiss" к результатам в Review tab
✅ Реализован функционал копирования с визуальным подтверждением ("Copied!")
✅ Реализован функционал скрытия результата с плавной анимацией
✅ Созданы отдельные стили в ReviewMessage.scss
✅ Подключен новый компонент в ReviewTab

Критерии приемки (Acceptance Criteria)

✅ Во вкладке "Review" рядом с сгенерированным результатом присутствуют кнопки "Copy" и "Dismiss".

✅ Нажатие на "Copy" корректно копирует полный текст результата в буфер обмена.

✅ После копирования есть четкая визуальная обратная связь для пользователя.

✅ Нажатие на "Dismiss" скрывает блок с результатом и возвращает вкладку "Review" в исходное состояние.

✅ Внешний вид кнопок полностью соответствует стилю дизайн-системы проекта.

✅ Задача 4: Добавление и стилизация тултипа для иконки чата - ВЫПОЛНЕНО

Use Case: Пояснение назначения иконки

Use Case ID	UC-04
Название	Отображение подсказки для иконки чата
Действующее лицо	Пользователь
Описание	Пользователь видит иконку для вызова чата с ИИ, но может не сразу понять ее назначение. Чтобы улучшить юзабилити, при наведении курсора на эту иконку должна появляться всплывающая подсказка (тултип).

РЕАЛИЗАЦИЯ:
✅ Интегрирован существующий компонент Tooltip из UI-библиотеки проекта
✅ Добавлен тултип с текстом "Ask Dokably AI" к FloatingChatButton
✅ Настроено позиционирование слева от кнопки для оптимального UX
✅ Использованы стандартные стили проекта для единообразия

Критерии приемки (Acceptance Criteria)

✅ При наведении курсора на иконку чата появляется тултип.

✅ Текст тултипа — "Ask Dokably AI".

✅ Внешний вид и анимация тултипа идентичны другим тултипам в системе.

✅ Тултип не обрезается и не перекрывает важные соседние элементы интерфейса.

✅ Задача 5: Исправление наложения иконки чата в табе Comments - ВЫПОЛНЕНО

Use Case: Корректное отображение интерфейса

Use Case ID	UC-05
Название	Устранение визуального бага с наложением иконки
Действующее лицо	Пользователь
Описание	Пользователь открывает боковую панель с комментариями ("Comments"). Иконка для вызова чата с ИИ, которая является глобальным элементом интерфейса, накладывается поверх содержимого этой панели, мешая просмотру и взаимодействию с комментариями.

РЕАЛИЗАЦИЯ:
✅ Проведена диагностика z-index структуры приложения
✅ Выявлена проблема: CommentsPanel имел z-index: 2, а FloatingChatButton - z-index: 1000
✅ Повышен z-index для CommentsPanel с 2 до 1001
✅ Повышен z-index для input области CommentsPanel до 1002
✅ Сохранена логическая иерархия z-index в системе

Критерии приемки (Acceptance Criteria)

✅ При открытой панели/вкладке "Comments" иконка чата с ИИ не накладывается на ее содержимое.

✅ Иконка чата остается видимой (если это предусмотрено логикой) и кликабельной.

✅ Исправление не вызывает регрессий: иконка корректно отображается на других страницах и при взаимодействии с другими элементами интерфейса.

✅ Решение кроссбраузерно и корректно работает на всех поддерживаемых разрешениях экрана.

СТАТУС ПРОЕКТА: ✅ ВСЕ ЗАДАЧИ ВЫПОЛНЕНЫ УСПЕШНО

АРХИТЕКТУРНЫЕ УЛУЧШЕНИЯ:
✅ Реализована персистентность истории чата между сессиями
✅ Разделены состояния Chat и Review табов для предотвращения дублирования контента
✅ Добавлены функциональные кнопки управления результатами в Review tab
✅ Улучшен UX с помощью информативных тултипов
✅ Исправлены визуальные проблемы с наложением элементов интерфейса
✅ Сохранена совместимость со всеми существующими стилями и компонентами
✅ Все изменения внесены только на фронтенде без затрагивания бэкенда

ДОПОЛНИТЕЛЬНЫЕ УЛУЧШЕНИЯ:
✅ Скрыт Input area в Review tab по умолчанию (показывается только при выборе "Run your custom instruction")
✅ Заменена иконка минимизации на стрелку (arrow.svg)
✅ Исправлена отправка запросов в API - теперь отправляется точный текст с фронтенда вместо apiType
✅ Настроена очистка localStorage для сброса истории чата
✅ Добавлена fallback логика: если /chatgpt/review возвращает пустой ответ или HTTP 422, автоматически отправляется через /chatgpt/custom-command с тем же текстом
✅ Добавлен отступ снизу для Suggestions в Review tab (margin-bottom: 20px)
✅ Исправлены кнопки Copy и Dismiss в Review tab:
  - Copy: копирование в буфер обмена с async/await и fallback для старых браузеров
  - Dismiss: полный сброс состояния (сообщения, input area, input value) с возвратом к исходному состоянию
  - Исправлено позиционирование кнопок (gap: 12px между кнопками)
  - Обе кнопки используют общие базовые классы (chat-message__copy-btn review-message__copy-btn), Dismiss имеет дополнительный модификатор review-message__dismiss-offset для позиционирования
✅ Удалена кнопка Close из правой части шапки ChatPanel (chat-panel__toolbar-right)
✅ Убрано уведомление "Copied!" при нажатии на кнопку Copy - кнопка всегда показывает "Copy"